digraph {
  edge[style=dashed];
  
  style=dotted;

  Client->Akamai;
  Akamai->ContentEndpoint;
  Akamai->PolicyEndpoint;
  Akamai->LayoutEndpoint;

  CPSTopic->CPSNotificationsQueue;

  subgraph cluster_awsS3 {
    S3;
  }

  subgraph cluster_awsSQS {
    CPSNotificationsQueue[label="CPS Notifications Queue"];
    ProducerCPSQueue[label="Producer CPS Queue"];
    ProducerLDPQueue[label="Producer LDP Queue"];
  }

  subgraph cluster_forge {
    ContentAPI;
    LinkedDataAPI;
  }  

  subgraph cluster_producer {
    Producer[shape=plaintext];

    PolicyEndpoint[label="Policy"];
    LayoutEndpoint[label="Layout"];
    ContentEndpoint[label="Content"];
    PolicyEndpoint->S3;
    LayoutEndpoint->S3;
    ContentEndpoint->Cache;
    ContentEndpoint->S3;
    ContentEndpoint->ProducerCPSQueue;
    ContentEndpoint->ProducerLDPQueue;
  }

  subgraph cluster_modelApi {
    ModelApi;
  }

  subgraph cluster_renderer {
    Renderer[shape=plaintext];

    CPSNotificationsQueue->CPSRoute;
    ProducerCPSQueue->CPSRoute;
    ProducerLDPQueue->LDPRoute;
    LDPRoute->HttpClient;
    CPSRoute->HttpClient;
    CPSRoute->ModelApi[label="transform"];
    LDPRoute->ModelApi;
    LDPRoute->S3;
    CPSRoute->S3;
      
    HttpClient->ContentAPI;
    HttpClient->LinkedDataAPI;
  }


}
